# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Github Action test

on:
  release:
    types: [published]

  push:
    branches:
      - 'nightly'
      - 'alpha'
  
jobs:
  Action_test:
    name: Action test set env vars
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_HUB_REPO }}
        
      - name: Set env BRANCH
        id: branch
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
        
      - name: Set env TAG
        id: docker-tag
        run: |
          echo "Set env tag"
          echo "event name  $GITHUB_EVENT_NAME"
          if [[ $BRANCH == 'main' && $GITHUB_EVENT_NAME == 'release' ]]; then
              echo "tag latest"
              echo "DOCKER_RELEASE_TAG=latest" >> "$GITHUB_ENV"
              echo "DOCKER_RELEASE_TAG=latest" >> "$GITHUB_OUTPUT"
              
          elif [[ $BRANCH == 'main' && $GITHUB_EVENT_NAME == 'push' ]]; then
              echo "tag nightly"
              echo "DOCKER_RELEASE_TAG=nightly" >> "$GITHUB_ENV"
              echo "DOCKER_RELEASE_TAG=nightly" >> "$GITHUB_OUTPUT"
              
          else
              echo "Nothing to do"
              echo "DOCKER_RELEASE_TAG=" >> "$GITHUB_ENV"
              echo "DOCKER_RELEASE_TAG=" >> "$GITHUB_OUTPUT"
          fi

      - name: tag test 2
        id: test2
        run: |
          DOCKER_REPO_NAME = "${{ vars.DOCKER_HUB_REPO }}"

          auto_tags = """${{ steps.meta.outputs.tags }}"""
          branch = "${{github.ref_name}}"
          event_name = "${{github.event_name}}" #release

          DOCKER_RELEASE_TAGS = f"""{DOCKER_REPO_NAME}:{branch}"""

          if event_name is "release":
              if "nightly" in branch or "alpha" in branch:
                  DOCKER_RELEASE_TAGS = DOCKER_RELEASE_TAGS + f", {DOCKER_REPO_NAME}:nightly"
              else:
                  DOCKER_RELEASE_TAGS = DOCKER_RELEASE_TAGS + f", {DOCKER_REPO_NAME}:latest"


          print("-"*20)
          print(f"auto_tags '{auto_tags}'")
          print("branch", branch)
          print("event_name", event_name)
          print()
          print(f"DOCKER_RELEASE_TAGS '{DOCKER_RELEASE_TAGS}'")
          print("-"*20)
          
          import os
          name = 'DOCKER_RELEASE_TAGS'
          value = DOCKER_RELEASE_TAGS
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f'{name}={value}', file=fh)

        shell: python


      - name: print env vars
        run: echo "Branch Name $BRANCH , tag ${{ steps.test2.outputs.DOCKER_RELEASE_TAGS }}"










          
